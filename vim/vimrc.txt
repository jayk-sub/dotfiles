call plug#begin('~/.vim/plugged')
  
  " Plugins
  Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' } " File tree
  Plug 'jistr/vim-nerdtree-tabs'                          " 
  Plug 'vim-scripts/AutoComplPop'                         " Autocomplete
  Plug 'junegunn/goyo.vim'                                " Centers text
  Plug 'scrooloose/syntastic'                             " Syntax checker
  Plug 'scrooloose/nerdcommenter'                         " Comments 
  Plug 'tpope/vim-surround'                               " Brackets
  Plug 'msanders/snipmate.vim'                            " Snippets
  Plug 'rstacruz/sparkup'                                 " HTML expander
  Plug 'kien/rainbow_parentheses.vim'                     " Brackets color
  Plug 'shemerey/vim-peepopen'                            " Path search
  Plug 'ctrlpvim/ctrlp.vim'                               " Ctrl-P
  Plug 'fisadev/vim-ctrlp-cmdpalette'                     " Ctrl-Palete
  Plug 'bling/vim-airline'                                " Better statusline.
  Plug 'airblade/vim-gitgutter'                           " Git Diff
  Plug 'gorodinskiy/vim-coloresque'                       " RGB Colors
  Plug 'raimondi/delimitmate'                             " Close parenthesis
  Plug 'majutsushi/tagbar'                                " Outline tags.
  Plug 'oplatek/Conque-Shell'                             " Terminal
  Plug 'hhvm/vim-hack'                                    " HackLang
  Plug 'terryma/vim-multiple-cursors'                     " Mutiple cursors
  Plug 'elzr/vim-json'                                    " JSON
  " Themes
  Plug 'altercation/vim-colors-solarized'
  Plug 'jpo/vim-railscasts-theme'
  Plug '29decibel/codeschool-vim-theme'
  Plug 'endel/vim-github-colorscheme'
  Plug 'trusktr/seti.vim'
  Plug 'blueshirts/darcula'
call plug#end()

set history=700
set wildmenu
set wildmode=list:longest
set ruler
set number
set hid
set backspace=eol,start,indent
set ignorecase
set smartcase
set hlsearch
set magic
set encoding=utf8
set modifiable
set expandtab
set tabstop=2
set shiftwidth=2
set smarttab
set ai
set si
set autochdir
set mouse=a
set noerrorbells
set nocompatible
filetype plugin indent on
filetype plugin on
set wrap
set linebreak
set nolist
set showmode
set title
set ttyfast
set cmdheight=2
set columns=80
set colorcolumn=80
set textwidth=80
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8

" Theme selector
syntax enable
set background=dark
colorscheme seti
set guifont=Inconsolata\ for\ Powerline:h15

if has("gui_macvim")
  " Press Ctrl-Tab to switch between open tabs (like browser tabs) to 
  " the right side. Ctrl-Shift-Tab goes the other way.
  noremap <C-Tab> :tabnext<CR>
  noremap <C-S-Tab> :tabprev<CR>

  " Switch to specific tab numbers with Command-number
  noremap <D-1> :tabn 1<CR>
  noremap <D-2> :tabn 2<CR>
  noremap <D-3> :tabn 3<CR>
  noremap <D-4> :tabn 4<CR>
  noremap <D-5> :tabn 5<CR>
  noremap <D-6> :tabn 6<CR>
  noremap <D-7> :tabn 7<CR>
  noremap <D-8> :tabn 8<CR>
  noremap <D-9> :tabn 9<CR>
  " Command-0 goes to the last tab
  noremap <D-0> :tablast<CR>
endif

" Pane navigation
map <C-M-Left> <C-w>h
map <C-M-Up> <C-w>j
map <C-M-Down> <C-w>k
map <C-M--Right> <C-w>l

" NerdTree config.
map <C-t> :NERDTreeToggle<CR>
map <C-M-t> :NERDTreeTabsToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Syntastic config - Requires validators. Read the docs.
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint','jshint']

" Rainbow parenthesis
autocmd VimEnter * RainbowParenthesesToggle
autocmd Syntax * RainbowParenthesesLoadRound
autocmd Syntax * RainbowParenthesesLoadSquare
autocmd Syntax * RainbowParenthesesLoadBraces

" CmdPCommandPalette
let g:ctrlp_map = '<c-l>'
let g:ctrlp_cmdpalette_execute = 1
map <C-p> :CtrlPCmdPalette<CR>

" Vim Airline
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"

let g:airline#extensions#tabline#enabled = 1
set laststatus=2

if has("gui_running")
  let s:uname = system("uname")
  if s:uname == "Darwin\n"
    set guifont=Inconsolata\ for\ Powerline:h15
  endif
endif

" Tagbar - Requires CTags.
nmap <F6> :TagbarToggle<CR>

" Multiple cursors

" Conque-Shell
let g:ConqueTerm_PyVersion = 2
let g:ConqueTerm_FastMode = 0
let g:ConqueTerm_Color = 2
let g:ConqueTerm_ReadUnfocused = 1
let g:ConqueTerm_PromptRegex = '^\w\+@[0-9A-Za-z_.-]\+:[0-9A-Za-z_./\~,:-]\+\$'
let g:ConqueTerm_InsertOnEnter = 1
