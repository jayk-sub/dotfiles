var q = require('q')

function Variable(obj, connection) {
  this.name = obj.name;
  this.value = obj.value || {
    ref: obj.ref
  };


  this.connection = connection;
}

Variable.prototype.populate = function() {
  if (this.populated) {
    return q(this);
  }

  var self = this;
  var ref = this.value.ref;

  if (!ref) {
    this.populated = true;
    this.value.properties = this.value.properties || [];
    this.value.properties = this.value.properties.map(function(prop) {
      return new Variable(prop, self.connection);
    });
    return q(this);
  }

  return this
    .connection
    .lookup([ref])
    .then(function(body) {
      self.value = body[ref];

      if (self.value.type.toLowerCase() === 'object') {
        self.value.properties = self.value.properties.map(function(prop) {
          return new Variable(prop, self.connection);
        });
      }
      self.populated = true;
      return self;
    });
};

module.exports = Variable;
