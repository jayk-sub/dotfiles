var Variable = require('./variable')
  , q = require('q');

function Frame(f, connection) {
  this.args = f.arguments;
  this.locals = f.locals;
  this.context = f.receiver;
  this.index = f.index;
  this.file = f.script.name;
  this.line = f.line;

  this.args = this.args.map(function(arg) {
    return new Variable(arg, connection);
  });

  this.locals = this.locals.map(function(lcoal) {
    return new Variable(lcoal, connection);
  });

  this.context = new Variable({
    name: 'this',
    value: {
      ref: f.receiver
    }
  }, connection);
}

Frame.prototype.populate = function() {
  var self = this;
  var all = this.args.concat(this.locals);

  return all.reduce(function(promise, val) {
    return promise.then(function() {
      return val.populate();
    })
  }, q(true)).then(function() {
    return self;
  });
}

module.exports = Frame;
