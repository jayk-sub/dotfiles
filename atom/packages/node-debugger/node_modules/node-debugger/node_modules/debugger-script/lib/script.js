var _ = require('lodash')
  , q = require('q')
  , path = require('path')
  , NORMAL_SCRIPTS = 4;

module.exports = function(client) {

  function Script(data) {
    _.extend(this, data);

    this.isInFileSystem = function() {
      return this.name.indexOf(path.sep) > -1;
    }
  }

  Script.fetch = function(options) {
    var deferred = q.defer(),
        promise

    client.request('scripts', options, function(err, body, res) {
      if (err) {
        return deferred.reject(new Error(err));
      }
      deferred.resolve({body: body});
    });

    promise = deferred.promise.then(function (data) {
      if (data.body && data.body.length > 1) {
        return data.body.map(function(item) {
          return new Script(item)
        });
      }
      return new Script(data.body[0]);
    });

    return promise;
  };

  Script.fetchById = function(id, opts) {
    opts = opts || {}

    return this.fetch({
      types: opts.type || NORMAL_SCRIPTS,
      ids: [id],
      includeSource: true
    })
  };

  Script.listAll = function() {
    return this.fetch({
      types: NORMAL_SCRIPTS,
      includeSource: true
    });
  };

  return Script;
};
