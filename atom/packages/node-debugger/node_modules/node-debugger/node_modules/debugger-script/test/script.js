var rewire = require('rewire')
  , sinon = require('sinon')
  , test = require('tape')
  , ScriptGenerator = rewire('../lib/script')
  , options;


options = {
  types: 4,
  ids: [],
  includeSource: true
};

function createClient(requestFn) {
  return {
    request: requestFn
  };
}

test('fetch scripts', function(t) {
  t.plan(1);

  var clientStub
    , Script;

  clientStub = createClient(
    sinon.stub().callsArgWith(2, null, { body: [] })
  );

  Script = ScriptGenerator(clientStub);

  Script.fetch(options).done();

  t.ok(clientStub.request.calledWith('scripts', options), "should call request with fetch options");
});


test('findById', function(t) {
  t.plan(1);

  var clientStub
    , Script;

  clientStub = createClient(
    sinon.stub().callsArgWith(2, null, { body: [] })
  );

  Script = ScriptGenerator(clientStub);

  Script.fetchById(1).done();

  t.ok(clientStub.request.calledWith('scripts'), 'find script for specific id');
});

test('fetch all the script', function(t) {
  t.plan(1);

  var clientStub
    , Script;

  clientStub = createClient(
    sinon.stub().callsArgWith(2, null, { body: [] })
  );

  Script = ScriptGenerator(clientStub);

  Script.listAll().done();

  t.ok(clientStub.request.calledWith('scripts'), 'find script for specific id');
});
